{"ast":null,"code":"/* eslint-disable consistent-return */\nimport axios from 'axios';\nconst URL = 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary';\nexport const getPlacesData = async (sw, ne) => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await axios.get(URL, {\n      method: 'GET',\n      url: 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary',\n      params: {\n        bl_latitude: sw.lat,\n        tr_latitude: ne.lat,\n        tr_longitude: sw.lng,\n        bl_longitude: ne.lng\n      },\n      headers: {\n        'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n        'x-rapidapi-key': '571c50a245msh2bc0e902422756fp1237a1jsn6a1b5c228dae'\n      }\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWeatherData = async (lat, lng) => {\n  try {\n    if (lat && lng) {\n      const {\n        data\n      } = await axios.get('https://community-open-weather-map.p.rapidapi.com/find', {\n        params: {\n          lat,\n          lon: lng\n        },\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': '571c50a245msh2bc0e902422756fp1237a1jsn6a1b5c228dae'\n        }\n      });\n      return data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/cosmin/Desktop/travel_adv/src/api/index.js"],"names":["axios","URL","getPlacesData","sw","ne","data","get","method","url","params","bl_latitude","lat","tr_latitude","tr_longitude","lng","bl_longitude","headers","error","console","log","getWeatherData","lon"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,oEAAZ;AAGA,OAAO,MAAMC,aAAa,GAAG,OAAOC,EAAP,EAAWC,EAAX,KAAkB;AAC3C,MAAI;AACF,UAAM;AAACC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAP,QAAmB,MAAML,KAAK,CAACM,GAAN,CAAUL,GAAV,EAAe;AAC5CM,MAAAA,MAAM,EAAE,KADoC;AAE5CC,MAAAA,GAAG,EAAE,oEAFuC;AAG5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAEP,EAAE,CAACQ,GADV;AAENC,QAAAA,WAAW,EAAER,EAAE,CAACO,GAFV;AAGNE,QAAAA,YAAY,EAAEV,EAAE,CAACW,GAHX;AAINC,QAAAA,YAAY,EAAEX,EAAE,CAACU;AAJX,OAHoC;AAU5CE,MAAAA,OAAO,EAAE;AACP,2BAAmB,+BADZ;AAEP,0BAAkB;AAFX;AAVmC,KAAf,CAA/B;AAeA,WAAOX,IAAP;AACD,GAjBD,CAiBE,OAAMY,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CArBM;AAuBP,OAAO,MAAMG,cAAc,GAAG,OAAOT,GAAP,EAAYG,GAAZ,KAAoB;AAChD,MAAI;AACF,QAAIH,GAAG,IAAIG,GAAX,EAAgB;AACd,YAAM;AAAET,QAAAA;AAAF,UAAW,MAAML,KAAK,CAACM,GAAN,CAAU,wDAAV,EAAoE;AACzFG,QAAAA,MAAM,EAAE;AAAEE,UAAAA,GAAF;AAAOU,UAAAA,GAAG,EAAEP;AAAZ,SADiF;AAEzFE,QAAAA,OAAO,EAAE;AACP,6BAAmB,2CADZ;AAEP,4BAAkB;AAFX;AAFgF,OAApE,CAAvB;AAQA,aAAOX,IAAP;AACD;AACF,GAZD,CAYE,OAAOY,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAhBM","sourcesContent":["/* eslint-disable consistent-return */\nimport axios from 'axios'\n\nconst URL = 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary'\n\n\nexport const getPlacesData = async (sw, ne) => {\n    try {\n      const {data: { data }} = await axios.get(URL, {\n        method: 'GET',\n        url: 'https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary',\n        params: {\n          bl_latitude: sw.lat,\n          tr_latitude: ne.lat,\n          tr_longitude: sw.lng,\n          bl_longitude: ne.lng\n          \n        },\n        headers: {\n          'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n          'x-rapidapi-key': '571c50a245msh2bc0e902422756fp1237a1jsn6a1b5c228dae'\n        }\n      })\n      return data;\n    } catch(error) {\n        console.log(error)\n    }\n}\n\nexport const getWeatherData = async (lat, lng) => {\n  try {\n    if (lat && lng) {\n      const { data } = await axios.get('https://community-open-weather-map.p.rapidapi.com/find', {\n        params: { lat, lon: lng },\n        headers: {\n          'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com',\n          'x-rapidapi-key': '571c50a245msh2bc0e902422756fp1237a1jsn6a1b5c228dae',\n        },\n      });\n\n      return data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}